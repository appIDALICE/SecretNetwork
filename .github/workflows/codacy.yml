# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: Codacy Security Scan

on:
  push:
    branches: [ "IDPATRYK", ID, IDD ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "IDPATRYK" ]
  schedule:
    - cron: '39 23 * * 1'

permissions:
  contents: read

jobs:
  codacy-security-scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v3

      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@d840f886c4bd4edc059706d09c6a1586111c540b
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

- name: Debian Packer
  # You may pin to the exact commit or the version.
  # uses: Nightwind-Developments/debian-packer@b34530b688607b7107ee5505319305038ea533ba
  uses: Nightwind-Developments/debian-packer@1.0.0
  with:
    # Path to the directory with all the files to be included in the generated package
    input_dir: # default is ${{ github.workspace }}/input/
    # Path to JSON configuration file with how to organise the build package directory
    layout_map_file: 
    # Name of the Package to be used in the file name
    package_name: 
    # Version number of the Package to be used in the file name
    package_version: 
    # Architecture of the Package to be used in the file name
    package_arch: # optional, default is 
    # Directory path to where the generated package is intended to be saved
    output_dir: # optional, default is ${{ github.workspace }}/output/
    
    - name: Debian Control File Builder
  # You may pin to the exact commit or the version.
  # uses: Nightwind-Developments/debian-control-file-builder@b1a556a7f9240e10c99fed65668685dfa7241bf8
  uses: Nightwind-Developments/debian-control-file-builder@1.0.8
  with:
    # Path to configuration file in JSON format
    config-file: 
    # True if keys are exactly in the right case, False if keys are to be converted to first letter capitalise, remaining characters lowercase
    case-sensitive-keys: # optional, default is true
    # Path to the file with the list of dependencies to include in the generated control file
    deps-file: # optional
    # The path to where the generated control file will be saved
    output-path: # optional, default is output
    
    - name: build-deb-action
  # You may pin to the exact commit or the version.
  # uses: jiro4989/build-deb-action@6b31b9f9c52862945f0a410987fa4c4e771a17f8
  uses: jiro4989/build-deb-action@v2
  with:
    # Package name of debian package.
    package: 
    # Directory of release files.
    package_root: 
    # Package maintainer name.
    maintainer: 
    # Package version.
    version: 
    # Package installed size. GitHub Actions set summarized byte size of `package_root` directory when this parameter is empty.
    installed_size: # optional, default is 
    # Package dependencies.
    depends: # optional, default is none
    # Package architecture.
    arch: # optional, default is amd64
    # Package description.
    desc: # optional, default is no description
    # Set the compression type used when building. Allowed types gzip, xz, zstd, none. Default is gzip.

    compress_type: # optional, default is gzip
    
    - name: Setup Chrome
  # You may pin to the exact commit or the version.
  # uses: browser-actions/setup-chrome@4fa655aad48f56911cad16db9252399a9e592848
  uses: browser-actions/setup-chrome@v0.0.0
  with:
    # The Chromium version to install and use.
    chromium-version: # optional
    
    - name: Install Chrome
  # You may pin to the exact commit or the version.
  # uses: logikal-io/install-chrome@32e3d70760b32325821eaf0d97bb2ad62c2898df
  uses: logikal-io/install-chrome@v1.0.0
  with:
    # The version to install (exactly as in https://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable)
    version: 
    
    - name: setup-chromedriver
  # You may pin to the exact commit or the version.
  # uses: nanasess/setup-chromedriver@7cbd35794f8ab317f778c3172fb86c1e9b2853f7
  uses: nanasess/setup-chromedriver@v1.1.0
  with:
    # The chromedriver version to install
    chromedriver-version: # optional
    
    - name: Puppeteer Headful
  # You may pin to the exact commit or the version.
  # uses: mujo-code/puppeteer-headful@dc686995286d5d066eefb70158fe7697519b880d
  uses: mujo-code/puppeteer-headful@18.9.0
  with:
    # A command to run inside the container normally this would be a npm script to start testing.
    args: 
    
    - name: Puppeteer Container
  # You may pin to the exact commit or the version.
  # uses: ianwalter/puppeteer-container@acc52cd2334ad9eaf6e1974562d263e0a711b7e8
  uses: ianwalter/puppeteer-container@v4.0.0
    
